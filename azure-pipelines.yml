trigger:
- main

stages:
- stage: Build
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: ubuntu-22.04
    variables:
      MODULE_NAME: acc
      MODULE_VERSION: 0.0.1-amd64
      CONTAINER_REGISTRY: chickenfarmmardrid.azurecr.io
    steps:
    - script: |
        cd ./modules/$(MODULE_NAME)
        dotnet publish --os linux --arch x64 /t:PublishContainer
      displayName: 'Build Docker Image'

    - task: AzureCLI@2
      displayName: 'Login and Push Docker Image to ACR'
      inputs:
        azureSubscription: 'ChickenFarmConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name chickenfarmmardrid
          docker tag $(MODULE_NAME) $(CONTAINER_REGISTRY)/$(MODULE_NAME):$(MODULE_VERSION)
          docker push $(CONTAINER_REGISTRY)/$(MODULE_NAME):$(MODULE_VERSION)

- stage: Release
  jobs:
  - job: Deploy
    pool:
      vmImage: ubuntu-22.04
    variables:
      MODULE_NAME: acc
      MODULE_VERSION: 0.0.1-amd64
      CONTAINER_REGISTRY: chickenfarmmardrid.azurecr.io
    steps:
    - script: |
        # install python and dependencies
        sudo apt update
        sudo apt install software-properties-common -y
        sudo add-apt-repository ppa:deadsnakes/ppa -y
        sudo apt install python3.9 python3.9-distutils -y
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python3.9 get-pip.py
        python3.9 -m pip install -U iotedgedev pyOpenSSL==22.0.0 urllib3==1.22 requests
      displayName: 'Install iotedgedev and dependencies'

    - task: AzureIoTEdge@2
      displayName: 'Generate Deployment Manifest'
      inputs:
        action: 'Generate deployment manifest'
        templateFilePath: 'deployment.template.json'
        defaultPlatform: 'amd64'
        deploymentManifestOutputPath: '$(System.DefaultWorkingDirectory)/config/deployment.json'
        validateGeneratedDeploymentManifest: 'false'

    - task: AzureCLI@2
      displayName: 'Deploy to IoT Edge via Azure CLI'
      inputs:
        azureSubscription: 'ChickenFarmConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az iot edge set-modules \
            --device-id acc \
            --hub-name ChickenFarmMadrid \
            --content $(System.DefaultWorkingDirectory)/config/deployment.json
